疯狗的核心算法：

1. 首先定一个大目标（布阵/杀某人）；  然后不断循环判断目标是否达成； 如果没有达成则选择一个动作去进一步达成目标。这就构成了一个负反馈的闭环； 无论战场情况如何混乱（比如对手离开了原来的位置， 或者行进路线被人挡住了）， 最终总能达成目标。

2. 某个时刻的战场状态不能直接用于决策， 必须预演当前动作完成后的状况，再决定下一步动作。 比如战士在（2，2）当前动作forward，我们希望他到达（2，3）位置。 如果简单的看当前位置你就会再发起一个forward指令。而如果预演该战士当前动作完成后的状态的话，我们就不用再发出指令。不然就会走过头。


从编写第一个真正意义上的指挥算法【疯狗战阵】的过程中，觉得这种编程非常向大学生机器人比赛要做的事情。  控制机器人第一步是要能够精确控制其行为，让他能够在该停的地方停，该走的地方走，不走过头；然后才能进一步去完成最终的目标。

从回放器情况看， 疯狗走的还是有点弯弯扭扭，很多步走来走去不知道要干嘛，还没仔细琢磨问题在哪里。第一次比赛我觉得如果谁的程序能够精确控制行为，即使没有任何战术估计就能赢。




Regards

老范



